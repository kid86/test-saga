{"ast":null,"code":"import _regeneratorRuntime from \"/home/kid86/Desktop/reactjs/data-load-test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kid86/Desktop/reactjs/data-load-test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchUser),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(usersSaga);\n\nimport { put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { loadUsersSuccess, LOAD_USERS_ERROR, LOAD_USERS_LOADING, LOAD_USERS_SUCCESS } from \"./actions\";\nimport Api from '../api';\n\nfunction fetchAsync(_x) {\n  return _fetchAsync.apply(this, arguments);\n}\n\nfunction _fetchAsync() {\n  _fetchAsync = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(func) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return func();\n\n          case 2:\n            response = _context3.sent;\n\n            if (!response.ok) {\n              _context3.next = 7;\n              break;\n            }\n\n            _context3.next = 6;\n            return response.json();\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n            throw new Error(\"Unexpected error!!!\");\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _fetchAsync.apply(this, arguments);\n}\n\nfunction fetchUser() {\n  var users;\n  return _regeneratorRuntime.wrap(function fetchUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetchAsync(Api.getUsers);\n\n        case 3:\n          users = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_USERS_SUCCESS,\n            data: users\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOAD_USERS_ERROR,\n            error: _context.t0.message\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nexport function usersSaga() {\n  return _regeneratorRuntime.wrap(function usersSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOAD_USERS_LOADING, fetchUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\nexport default usersSaga;","map":{"version":3,"sources":["/home/kid86/Desktop/reactjs/data-load-test-app/src/redux-saga/sagas.js"],"names":["fetchUser","usersSaga","put","takeEvery","takeLatest","loadUsersSuccess","LOAD_USERS_ERROR","LOAD_USERS_LOADING","LOAD_USERS_SUCCESS","Api","fetchAsync","func","response","ok","json","Error","getUsers","users","type","data","error","message"],"mappings":";;;;;yBAcUA,S;;;yBAUOC,S;;AAxBjB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAAQC,gBAAR,EAA0BC,gBAA1B,EAA4CC,kBAA5C,EAAgEC,kBAAhE,QAAyF,WAAzF;AACA,OAAOC,GAAP,MAAgB,QAAhB;;SAEeC,U;;;;;;;2BAAf,iBAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC2BA,IAAI,EAD/B;;AAAA;AACUC,YAAAA,QADV;;AAAA,iBAGQA,QAAQ,CAACC,EAHjB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIqBD,QAAQ,CAACE,IAAT,EAJrB;;AAAA;AAAA;;AAAA;AAAA,kBAOU,IAAIC,KAAJ,CAAU,qBAAV,CAPV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUA,SAAUf,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEsB,iBAAMU,UAAU,CAACD,GAAG,CAACO,QAAL,CAAhB;;AAFtB;AAEcC,UAAAA,KAFd;AAAA;AAIQ,iBAAMf,GAAG,CAAC;AAACgB,YAAAA,IAAI,EAAEV,kBAAP;AAA2BW,YAAAA,IAAI,EAAEF;AAAjC,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMQ,iBAAMf,GAAG,CAAC;AAACgB,YAAAA,IAAI,EAAEZ,gBAAP;AAAyBc,YAAAA,KAAK,EAAE,YAAEC;AAAlC,WAAD,CAAT;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,OAAO,SAAUpB,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAME,SAAS,CAACI,kBAAD,EAAqBP,SAArB,CAAf;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,eAAeC,SAAf","sourcesContent":["import { put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport {loadUsersSuccess, LOAD_USERS_ERROR, LOAD_USERS_LOADING, LOAD_USERS_SUCCESS} from \"./actions\";\nimport Api from '../api'\n\nasync function fetchAsync(func) {\n    const response = await func();\n\n    if (response.ok) {\n        return await response.json();\n    }\n\n    throw new Error(\"Unexpected error!!!\");\n}\n\nfunction* fetchUser() {\n    try {\n        const users = yield fetchAsync(Api.getUsers);\n\n        yield put({type: LOAD_USERS_SUCCESS, data: users});\n    } catch (e) {\n        yield put({type: LOAD_USERS_ERROR, error: e.message});\n    }\n}\n\nexport function* usersSaga() {\n    // Allows concurrent fetches of users\n    yield takeEvery(LOAD_USERS_LOADING, fetchUser);\n\n    // Does not allow concurrent fetches of users\n    // yield takeLatest(LOAD_USERS_LOADING, fetchUser);\n}\n\nexport default usersSaga;"]},"metadata":{},"sourceType":"module"}